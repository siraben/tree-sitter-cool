================================================================================
Comment
================================================================================

(* hello-world.cl *)

--------------------------------------------------------------------------------

(program
  (comment))

================================================================================
multi-line comment
================================================================================

(*
hello
this is a comment
*)

--------------------------------------------------------------------------------

(program
  (comment))

================================================================================
hello world
================================================================================


(* hello-world.cl *)
class Main inherits IO {
  main() : Object {
    out_string("Hello, world!\n")
  };
};

--------------------------------------------------------------------------------

(program
  (comment)
  (classDefine
    (type)
    (type)
    (feature
      (method
        (id)
        (type)
        (expression
          (functionCall
            (id)
            (expression
              (string))))))))

================================================================================
sequential assign
================================================================================


class Main {
  x:Int;
  y:Int;
  main():Object { {x <- y <- ~(5);}};
};
--------------------------------------------------------------------------------

(program
  (classDefine
    (type)
    (feature
      (property
        (formal
          (id)
          (type))))
    (feature
      (property
        (formal
          (id)
          (type))))
    (feature
      (method
        (id)
        (type)
        (expression
          (expression
            (id)
            (expression
              (id)
              (expression
                (expression
                  (expression
                    (int)))))))))))

================================================================================
method call
================================================================================


class List {
  cons(s : String) : List {
    (new Cons).init(s, self)
  };
};

--------------------------------------------------------------------------------

(program
  (classDefine
    (type)
    (feature
      (method
        (id)
        (formal
          (id)
          (type))
        (type)
        (expression
          (dispatch
            (expression
              (expression
                (type)))
            (id)
            (expression
              (id))
            (expression
              (id))))))))

================================================================================
case
================================================================================

class Main inherits IO {
  eval(t : Exp) : String {
    case t of
      t : Lit => t.eval();
      t : Add => eval(t.l()).concat(eval(t.r()));
    esac
  };
};

--------------------------------------------------------------------------------

(program
  (classDefine
    (type)
    (type)
    (feature
      (method
        (id)
        (formal
          (id)
          (type))
        (type)
        (expression
          (expression
            (id))
          (formal
            (id)
            (type))
          (expression
            (dispatch
              (expression
                (id))
              (id)))
          (formal
            (id)
            (type))
          (expression
            (dispatch
              (expression
                (functionCall
                  (id)
                  (expression
                    (dispatch
                      (expression
                        (id))
                      (id)))))
              (id)
              (expression
                (functionCall
                  (id)
                  (expression
                    (dispatch
                      (expression
                        (id))
                      (id))))))))))))
